// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4WdhSVfyEYnextDzQgbzVw
// Component: M6f8TVuHxw-J
import * as React from "react";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_applicant_tracking_system.module.css"; // plasmic-import: 4WdhSVfyEYnextDzQgbzVw/projectcss
import sty from "./PlasmicPublicCard.module.css"; // plasmic-import: M6f8TVuHxw-J/css
import Rectangle296Icon from "./icons/PlasmicIcon__Rectangle296"; // plasmic-import: sN7EKKcgAhB7/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: weFgsDumIobu/icon
import Arrow7Icon from "./icons/PlasmicIcon__Arrow7"; // plasmic-import: t-zShSNNSTA6/icon

createPlasmicElementProxy;

export const PlasmicPublicCard__VariantProps = new Array();

export const PlasmicPublicCard__ArgProps = new Array();

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPublicCard__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"figmaPaste"}
        data-plasmic-override={overrides.figmaPaste}
        className={classNames(projectcss.all, sty.figmaPaste)}
      >
        <Rectangle296Icon
          className={classNames(projectcss.all, sty.svg__qpDzt)}
          role={"img"}
        />

        <p.PlasmicImg
          data-plasmic-name={"img"}
          data-plasmic-override={overrides.img}
          alt={""}
          className={classNames(sty.img)}
          displayHeight={"362.586px"}
          displayMaxHeight={"none"}
          displayMaxWidth={"100%"}
          displayMinHeight={"0"}
          displayMinWidth={"0"}
          displayWidth={"481.326px"}
          loading={"lazy"}
          src={{
            src: "/plasmic/applicant_tracking_system/images/group1578.svg",
            fullWidth: 481.326,
            fullHeight: 362.586,
            aspectRatio: 1.326027
          }}
        />

        <div
          data-plasmic-name={"_1111"}
          data-plasmic-override={overrides._1111}
          className={classNames(projectcss.all, sty._1111)}
        />

        <VectorIcon
          className={classNames(projectcss.all, sty.svg___2MrBg)}
          role={"img"}
        />

        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__uqQym
          )}
        >
          {
            "\u0412\u044f\u0447\u0435\u0441\u043b\u0430\u0432 \u0411\u0438\u0440\u044e\u043a\u043e\u0432"
          }
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__odudh
          )}
        >
          {
            "\u0412\u0435\u0431-\u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440, \u0420\u043e\u0441\u0441\u0438\u044f"
          }
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__cWtPa
          )}
        >
          {"\u041d\u0430\u0432\u044b\u043a\u0438:"}
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__bGRj
          )}
        >
          {
            "\u2714 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u0430\u043a\u0435\u0442\u043e\u0432, \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f\u043e\u0432 \u0432 Figma\n\u2714 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u0430\u0439\u0442\u043e\u0432 \u043d\u0430 Tilda\n\u2714 \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 Adobe Photoshop\n\u2714 \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 Adobe Illustrator\n\u2714 \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 Adobe Premiere Pro"
          }
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__iHHs
          )}
        >
          {
            "\u041e\u043f\u044b\u0442 \u0440\u0430\u0431\u043e\u0442\u044b: 3 \u0433\u043e\u0434\u0430"
          }
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__azspp
          )}
        >
          {"5 \u043e\u0446\u0435\u043d\u043e\u043a"}
        </div>
        <div
          data-plasmic-name={"group1582"}
          data-plasmic-override={overrides.group1582}
          className={classNames(projectcss.all, sty.group1582)}
        >
          <div
            data-plasmic-name={"rectangle297"}
            data-plasmic-override={overrides.rectangle297}
            className={classNames(projectcss.all, sty.rectangle297)}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__n19Rv
            )}
          >
            {"\u0421\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f"}
          </div>
          <Arrow7Icon
            className={classNames(projectcss.all, sty.svg__ne0Xp)}
            role={"img"}
          />
        </div>
        <div
          data-plasmic-name={"group1583"}
          data-plasmic-override={overrides.group1583}
          className={classNames(projectcss.all, sty.group1583)}
        >
          <div
            data-plasmic-name={"rectangle298"}
            data-plasmic-override={overrides.rectangle298}
            className={classNames(projectcss.all, sty.rectangle298)}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__i2VtX
            )}
          >
            {"\u041f\u043e\u0440\u0442\u0444\u043e\u043b\u0438\u043e"}
          </div>
        </div>
        <VectorIcon
          className={classNames(projectcss.all, sty.svg__noY2B)}
          role={"img"}
        />

        <VectorIcon
          className={classNames(projectcss.all, sty.svg__hClMp)}
          role={"img"}
        />

        <VectorIcon
          className={classNames(projectcss.all, sty.svg__h6QX3)}
          role={"img"}
        />

        <VectorIcon
          className={classNames(projectcss.all, sty.svg__wzRdP)}
          role={"img"}
        />

        <div
          data-plasmic-name={"rectangle299"}
          data-plasmic-override={overrides.rectangle299}
          className={classNames(projectcss.all, sty.rectangle299)}
        />
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "figmaPaste",
    "img",
    "_1111",
    "group1582",
    "rectangle297",
    "group1583",
    "rectangle298",
    "rectangle299"
  ],

  figmaPaste: [
    "figmaPaste",
    "img",
    "_1111",
    "group1582",
    "rectangle297",
    "group1583",
    "rectangle298",
    "rectangle299"
  ],

  img: ["img"],
  _1111: ["_1111"],
  group1582: ["group1582", "rectangle297"],
  rectangle297: ["rectangle297"],
  group1583: ["group1583", "rectangle298"],
  rectangle298: ["rectangle298"],
  rectangle299: ["rectangle299"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPublicCard__ArgProps,
          internalVariantPropNames: PlasmicPublicCard__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPublicCard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPublicCard";
  } else {
    func.displayName = `PlasmicPublicCard.${nodeName}`;
  }
  return func;
}

export const PlasmicPublicCard = Object.assign(
  // Top-level PlasmicPublicCard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    figmaPaste: makeNodeComponent("figmaPaste"),
    img: makeNodeComponent("img"),
    _1111: makeNodeComponent("_1111"),
    group1582: makeNodeComponent("group1582"),
    rectangle297: makeNodeComponent("rectangle297"),
    group1583: makeNodeComponent("group1583"),
    rectangle298: makeNodeComponent("rectangle298"),
    rectangle299: makeNodeComponent("rectangle299"),
    // Metadata about props expected for PlasmicPublicCard
    internalVariantProps: PlasmicPublicCard__VariantProps,
    internalArgProps: PlasmicPublicCard__ArgProps
  }
);

export default PlasmicPublicCard;
/* prettier-ignore-end */
